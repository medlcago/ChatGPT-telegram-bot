import asyncio
from aiogram import Router
from aiogram import html
from aiogram import types
from aiogram.filters import Command, CommandObject
from aiogram.types import URLInputFile

from decorators import message_logging
from filters import ChatTypeFilter
from utils.misc.neural_networks import image_generator

command_image_users_router = Router()


@command_image_users_router.message(Command(commands="image", prefix="/"), ChatTypeFilter(is_group=False))
@message_logging
async def command_image(message: types.Message, command: CommandObject):
    user_request = command.args
    if user_request:
        loop = asyncio.get_event_loop()
        user_request = html.quote(user_request)
        sent_message = await message.reply("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞, –æ–∂–∏–¥–∞–π—Ç–µ")
        image = URLInputFile(
            await loop.run_in_executor(None, image_generator, user_request),
            filename=user_request
        )
        if image:
            await message.reply_photo(photo=image,
                                      caption=f"üë® <b>–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</b>: <code>{message.from_user.full_name}</code>\n\n"
                                              f"üéà <b>–ê–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è</b>: <code>{message.message_id}</code>\n\n"
                                              f"ü§î <b>–ó–∞–ø—Ä–æ—Å</b>: <code>{user_request}</code>")
            await sent_message.delete()
        else:
            await message.reply(f"‚ùå <b>OpenAI API –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å</b>: {user_request}")
    else:
        if message.from_user.language_code == "ru":
            await message.reply(
                f"–ö–æ–º–∞–Ω–¥–∞ <b><i>{command.prefix + command.command}</i></b> –æ–∫–∞–∑–∞–ª–∞—Å—å –ø—É—Å—Ç–æ–π, –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω.")
        else:
            await message.reply(
                f"The command <b><i>{command.prefix + command.command}</i></b> was empty, the request could not be completed.")
